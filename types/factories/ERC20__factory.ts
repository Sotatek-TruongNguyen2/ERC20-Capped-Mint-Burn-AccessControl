/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC20 } from "../ERC20";

export class ERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<ERC20>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff191660121790553480156200001e57600080fd5b5060405162000b5038038062000b508339810160408190526200004191620001db565b8251620000569060009060208601906200008a565b5081516200006c9060019060208501906200008a565b506002805460ff191660ff9290921691909117905550620002af9050565b82805462000098906200025c565b90600052602060002090601f016020900481019282620000bc576000855562000107565b82601f10620000d757805160ff191683800117855562000107565b8280016001018555821562000107579182015b8281111562000107578251825591602001919060010190620000ea565b506200011592915062000119565b5090565b5b808211156200011557600081556001016200011a565b600082601f83011262000141578081fd5b81516001600160401b03808211156200015e576200015e62000299565b6040516020601f8401601f191682018101838111838210171562000186576200018662000299565b60405283825285840181018710156200019d578485fd5b8492505b83831015620001c05785830181015182840182015291820191620001a1565b83831115620001d157848185840101525b5095945050505050565b600080600060608486031215620001f0578283fd5b83516001600160401b038082111562000207578485fd5b620002158783880162000130565b945060208601519150808211156200022b578384fd5b506200023a8682870162000130565b925050604084015160ff8116811462000251578182fd5b809150509250925092565b6002810460018216806200027157607f821691505b602082108114156200029357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61089180620002bf6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461011357806395d89b4114610126578063a9059cbb1461012e578063dd62ed3e1461014157610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d657806323b872dd146100eb575b600080fd5b6100a0610154565b6040516100ad91906105d3565b60405180910390f35b6100c96100c436600461059f565b6101e6565b6040516100ad91906105c8565b6100de610203565b6040516100ad91906107c4565b6100c96100f9366004610564565b610209565b6101066102a9565b6040516100ad91906107cd565b6100de610121366004610511565b6102b2565b6100a06102d1565b6100c961013c36600461059f565b6102e0565b6100de61014f366004610532565b6102f4565b6060600080546101639061080a565b80601f016020809104026020016040519081016040528092919081815260200182805461018f9061080a565b80156101dc5780601f106101b1576101008083540402835291602001916101dc565b820191906000526020600020905b8154815290600101906020018083116101bf57829003601f168201915b5050505050905090565b60006101fa6101f361031f565b8484610323565b50600192915050565b60035490565b6001600160a01b038316600090815260046020526040812081908161022c61031f565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102785760405162461bcd60e51b815260040161026f906106ef565b60405180910390fd5b6102838585856103d7565b61029e8561028f61031f565b61029986856107f3565b610323565b506001949350505050565b60025460ff1690565b6001600160a01b0381166000908152600560205260409020545b919050565b6060600180546101639061080a565b60006101fa6102ed61031f565b84846103d7565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166103495760405162461bcd60e51b815260040161026f90610668565b6001600160a01b03821661036f5760405162461bcd60e51b815260040161026f90610626565b6001600160a01b0380841660008181526004602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103ca9085906107c4565b60405180910390a3505050565b6001600160a01b0382166103fd5760405162461bcd60e51b815260040161026f906106ab565b6001600160a01b0383166104235760405162461bcd60e51b815260040161026f90610736565b6001600160a01b03831660009081526005602052604090205481111561045b5760405162461bcd60e51b815260040161026f90610777565b6001600160a01b038316600090815260056020526040812080548392906104839084906107f3565b90915550506001600160a01b038216600090815260056020526040812080548392906104b09084906107db565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103ca91906107c4565b80356001600160a01b03811681146102cc57600080fd5b600060208284031215610522578081fd5b61052b826104fa565b9392505050565b60008060408385031215610544578081fd5b61054d836104fa565b915061055b602084016104fa565b90509250929050565b600080600060608486031215610578578081fd5b610581846104fa565b925061058f602085016104fa565b9150604084013590509250925092565b600080604083850312156105b1578182fd5b6105ba836104fa565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156105ff578581018301518582016040015282016105e3565b818111156106105783604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f5275696e3a3a41646472657373206f66207370656e64657220697320696c6567604082015261185b60f21b606082015260800190565b60208082526023908201527f5275696e3a3a41646472657373206f6620617070726f76657220697320696c6560408201526219d85b60ea1b606082015260800190565b60208082526024908201527f5275696e3a3a41646472657373206f6620726563697069656e7420697320696c6040820152631959d85b60e21b606082015260800190565b60208082526027908201527f5275696e3a3a5472616e7366657220616d6f756e74206578636565647320616c6040820152666c6f77616e636560c81b606082015260800190565b60208082526021908201527f5275696e3a3a41646472657373206f662073656e64657220697320696c6567616040820152601b60fa1b606082015260800190565b6020808252602d908201527f5275696e3a3a5472616e7366657220616d6f756e74206578636565647320616360408201526c636f756e742062616c616e636560981b606082015260800190565b90815260200190565b60ff91909116815260200190565b600082198211156107ee576107ee610845565b500190565b60008282101561080557610805610845565b500390565b60028104600182168061081e57607f821691505b6020821081141561083f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208ddcda4bcee4ed6506faa98347810fb3240b219f4199933c826dfb0a67422ad164736f6c63430008000033";
